/*Jerome Hayes JrCSE3301/13/16postfix.cppThis program converts infix expression to postfix expression.Lab is 100% Finish.*/#include <iostream>#include <stack>using namespace std;int prec(char input){    if(input == '*' or input == '/')        return 2;    else if(input == '+' or input == '-')        return 1;    else        return 0;}int main(){    stack <char> s;    char input;    cin >> input;    while(!cin.eof()) {        if((input >='0'and input <='9') or (input >='a' and input <='z') or (input >= 'A' and input <='Z')) {            cout << input;        }        else            if(input == '(') {                s.push(input);            }            else if(input == ')') {                while(!s.empty() and s.top()!= '(') {                    cout << s.top();                    s.pop();                }                if(!s.empty()) {                    s.pop();                }else{                    cout << "error!";        //no match for '('                    break;                }            }            else if(input == '*' or '/' or '+' or '-') {                if(s.empty() or prec(s.top()) < prec(input)) { //bottom of stack has lower precedence than everything                    s.push(input);                }                 else if(prec(s.top()) >= prec(input)) {                    while(!s.empty() and prec(s.top()) >= prec(input)) {                        cout << s.top();                        s.pop();                    }                    s.push(input);                }else{                     break;                }            }          cin >> input;    }    while(!s.empty()) {        cout << s.top();        s.pop();       }        cout << endl;} //end of program